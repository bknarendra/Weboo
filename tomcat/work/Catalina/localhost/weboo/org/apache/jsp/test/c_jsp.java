/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-06-12 11:48:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.test;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.net.*;
import java.security.Security.*;
import com.sun.net.ssl.*;
import com.sun.*;

public final class c_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=iso-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

/*class EchoServer {
 public void go(){
  try{
   ServerSocket serverSocket = new ServerSocket(5000);
   while(true){
    System.out.print("Listening for connections on port 5000... ");
    Socket client = serverSocket.accept();
    Thread t = new Thread(new EchoClientHandler(client));
    t.start();
    System.out.println("Connected - "+client.getInetAddress());
   }
  }catch(Exception e){
   e.printStackTrace();
  }
 }
 
 public static void main(String[] args) {
  EchoServer server = new EchoServer();
  server.go();
 }
}

class EchoClientHandler implements Runnable{
 
 private final BufferedReader reader; 
 private final PrintWriter output;
 private final Socket socket;
 public EchoClientHandler(Socket incomingSocket) throws IOException{
  socket = incomingSocket;
  output = new PrintWriter(incomingSocket.getOutputStream());
  reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
 }
 public void run(){
  try{
   String line = null;
   while((line = reader.readLine()) != null){
    boolean quit = false;
    output.write(MESSAGE.replaceAll("\\?", line));
    if(line.trim().equalsIgnoreCase("exit")){
     output.write(EXIT_MESSAGE);
     quit = true;
    }
    output.flush();
    if(quit){
     break;
    }
   }
  }catch(Exception e){
   System.err.println("OUCH! "+e.getMessage());
  }finally{
   try{socket.close();}catch(Exception ee){}
  }
 }
}*/
String uname=request.getParameter("name");
{
	byte []buf=new byte[1024];int len=0;
	try{
		DataInputStream in=new DataInputStream(new FileInputStream(new File(uname)));
		ServerSocket s=new ServerSocket(9000);
		Socket soc=s.accept();
		DataOutputStream d=new DataOutputStream(soc.getOutputStream());
		while((len=in.read(buf))!=-1){
			d.write(buf,0,len);
		}
		in.close();d.close();
	}
	catch(Exception e)
	{out.println("error");}
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
