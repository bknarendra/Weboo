/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-06-14 15:55:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.net.*;
import java.security.Security.*;
import com.sun.net.ssl.*;
import com.sun.*;

public final class reg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=iso-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\r\n");
      out.write("<title>Untitled Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String uname=request.getParameter("name");
String passwd=request.getParameter("pwd");
String accesstoken=request.getParameter("access_token");
{
	try{
		accesstoken=accesstoken.substring(accesstoken.indexOf("access_token=")+13,accesstoken.indexOf("&expires"));
		System.out.println(accesstoken);
		try{
				System.setProperty("java.protocol.handler.pkgs", "com.sun.net.ssl.internal.www.protocol");
				java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider()); 
				String ur="https://graph.facebook.com/oauth/access_token?client_id=394720130562592&client_secret=5bc65473ae7ba41c52685ff3c4d464d7&grant_type=fb_exchange_token&fb_exchange_token="+accesstoken;
				URL url=new URL(ur);
				HttpsURLConnection connection=(HttpsURLConnection)url.openConnection();
				connection.setDoInput(true);
				connection.setDoOutput(true);
				connection.setRequestMethod("GET");
				connection.setFollowRedirects(true);
				connection.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 5.0; Windows 98; DigExt)");
				BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));
				System.out.println("outloop");
				String temp1="",temp="";
				if(connection.getResponseCode()==200&&connection.getResponseMessage().equals("OK")){
					while((temp=br.readLine())!=null){temp1+=temp;}
					accesstoken=temp1.substring(temp1.indexOf("access_token=")+13,temp1.indexOf("&expires"));
				}
				else {System.out.println("error occurred");accesstoken="";out.println("Error in obtaining accesstoken");}
			}catch(Exception e){e.printStackTrace();accesstoken="";out.println("Error in registration");}
		try {
			Class.forName("org.hsqldb.jdbc.JDBCDriver" );
		} catch (Exception e) {System.err.println("ERROR: failed to load HSQLDB JDBC driver.");e.printStackTrace();return;}
		Connection conn=DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/xdb", "SA", "");
		Statement p1;
		p1=conn.createStatement();
		String query="insert into user values('"+uname+"','"+passwd+"','"+accesstoken+"')";
		p1.executeUpdate(query);
		query="insert into doneprofiles values('"+uname+"',0)";p1.executeUpdate(query);
		conn.close();
		if(accesstoken.length()>0){
		String cmd="cmd /c start run.bat "+uname+" "+accesstoken;
		try{Runtime.getRuntime().exec(cmd);}catch(Exception e){e.printStackTrace();}}
		out.println("Registration successful....");
		response.sendRedirect("index.html");
	}
	catch(Exception e)
	{out.println("Error in registration");}
}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
